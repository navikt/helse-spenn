name: Spenn-avstemming cronjob

on:
  push:
    paths:
      - 'spenn-avstemming-cronjob/**'
      - '.github/workflows/spenn-avstemming-cronjob.yml'
      - 'deploy/dev-job.yml'
      - 'deploy/prod-job.yml'
    branches:
      - master

jobs:
  set_version:
    name: set image name
    runs-on: ubuntu-latest
    steps:
      - name: create docker tag
        run: echo "TAG=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV
    outputs:
      image: ghcr.io/${{ github.repository }}/spenn-avstemming-cronjob:${{ env.TAG }}

  build:
    name: build docker image
    runs-on: ubuntu-latest
    needs: set_version
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-java@v1
        with:
          java-version: '17.x'
      - name: test and build
        run: ./gradlew :spenn-avstemming-cronjob:test :spenn-avstemming-cronjob:build
      - name: build docker image
        run: docker build spenn-avstemming-cronjob -f Dockerfile --pull -t ${{ needs.set_version.outputs.image }}
      - name: push docker image
        run: |
          docker login --username "$GITHUB_REPOSITORY" -p ${{ secrets.GITHUB_TOKEN }} ghcr.io
          docker push ${{ needs.set_version.outputs.image }}

  deployDev:
    name: deploy to dev
    needs: [set_version, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: deploy/dev-job.yml
          IMAGE: ${{ needs.set_version.outputs.image }}

  deployProd:
    name: deploy to prod
    needs: [set_version, build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: deploy/prod-job.yml
          IMAGE: ${{ needs.set_version.outputs.image }}
